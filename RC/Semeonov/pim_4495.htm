<HTML><HEAD>
<!-- Meta http equivalent was here                                     -->
<META NAME="keywords" CONTENT="PIM
Мультикастинг



">
<TITLE>4.4.9.5 Протокол PIM</TITLE>
</HEAD>
<BODY background="gainsboro" tppabs="http://book.itep.ru/gainsboro" link="#0000FF">

<center>
<table BORDER="0" CELLSPACING="1" CELLPADDING="5" bgcolor="ghostwhite">
  <tr>
    <td VALIGN="TOP" bgcolor="steelblue" LINK="#0000FF"><p align="center">

<A HREF="dvr_4494.htm" tppabs="http://book.itep.ru/4/44/dvr_4494.htm">  <IMG ALIGN=BOTTOM ALT="previous" SRC="k_prev.jpg" tppabs="http://book.itep.ru/k_prev.jpg"></A>


<A HREF="inter_44.htm" tppabs="http://book.itep.ru/4/44/inter_44.htm">   <IMG ALIGN=BOTTOM ALT="up"   SRC="k_up.jpg" tppabs="http://book.itep.ru/k_up.jpg"></A>


<A HREF="rut_4411.htm" tppabs="http://book.itep.ru/4/44/rut_4411.htm"><IMG ALIGN=BOTTOM ALT="down" SRC="k_down.jpg" tppabs="http://book.itep.ru/k_down.jpg"></A>


<A HREF="rsv_4496.htm" tppabs="http://book.itep.ru/4/44/rsv_4496.htm"><IMG ALIGN=BOTTOM ALT="next" SRC="k_next.jpg" tppabs="http://book.itep.ru/k_next.jpg"></A>

<A HREF="intro1.htm" tppabs="http://book.itep.ru/1/intro1.htm">  <IMG ALIGN=BOTTOM ALT="index" SRC="k_indx.jpg" tppabs="http://book.itep.ru/k_indx.jpg"></A>
<BR>

<B> <FONT COLOR="white">Previous: </FONT></B>
<A HREF="dvr_4494.htm" tppabs="http://book.itep.ru/4/44/dvr_4494.htm"><FONT COLOR="lightblue">4.4.9.4 Протокол мультикастинг-маршрутизации DVMRP</FONT></A>


<B><FONT COLOR="white">&nbsp;&nbsp; UP:</FONT> </B>
<A HREF="inter_44.htm" tppabs="http://book.itep.ru/4/44/inter_44.htm"><FONT COLOR="lightblue">4.4 Интернет</FONT></A>
<BR>


<B><FONT COLOR="white"> Down:</FONT></B>
<A HREF="rut_4411.htm" tppabs="http://book.itep.ru/4/44/rut_4411.htm"><FONT COLOR="lightblue">4.4.11 Протоколы    маршрутизации (обзор, таблицы маршрутизации, вектор расстояния)</FONT></A><BR>


<B><FONT COLOR="white">&nbsp; &nbsp; Next:</FONT></B>
<A HREF="rsv_4496.htm" tppabs="http://book.itep.ru/4/44/rsv_4496.htm"><FONT COLOR="lightblue">4.4.9.6 Протокол резервирования ресурсов RSVP</FONT></A>

</TD></TR>
<TR><TD ALIGN=CENTER>   
<FONT color="#0000FF" size=6><B>4.4.9.5 Протокол PIM</B></FONT><br>
<FONT size=3>Семенов Ю.А. (ГНЦ ИТЭФ)</FONT></p>

</TD></TR>
<TR><TD>
<!--new-->
<p ALIGN="justify">Протокол PIM (Protocol Independent Multicast) призван решить проблемы маршрутизации для произвольного числа и расположения членов группы и для произвольного числа отправителей информации. В настоящее время протокол не является стандартом.</P>

<p ALIGN="justify">Главным преимуществом данного протокола является эффективная поддержка работы "рассеянных" мультикастинг-групп. Такие группы могут включать
не только членов из разных автономных систем, но и находящихся на разных континентах. Протоколы MOSPF и DVMRP хороши для сетей, где нет ограничений по пропускной способности каналов. </p>

<p align="justify">PIM базируется на традиционных маршрутных протоколах, конкретно не связан ни с каким из них, им используются сформированные этими протоколами маршрутные таблицы. Существует два режима работы протокола - DM (для
компактных групп) и SM (Protocol Independent Multicast-Sparse Mode
(PIM-SM)). Protocol Specification. D. Estrin, D. Farinacci, A. Helmy, D. Thaler, S. Deering, M. Handley, V. Jacobson, C. Liu, P. Sharma, L. Wei, RFC-2117, June 1997) (для рассеянных групп). В режиме DM протокол PIM строит дерево маршрутов аналогично DVMRP.</p>

<p align="justify">В режиме SM маршрутизаторы, имеющие членов мультикастинг-группы, посылают сообщения о присоединении к дереву рассылки в узлы, которые называются точками встречи (RP). Отправители используют RP для объявления о своем существовании, а получатели, чтобы узнать о новых отправителях. В качестве RP может использоваться любой маршрутизатор, поддерживающий протокол PIM.</p>

<p align="justify">Когда какой-то клиент хочет подключиться к некоторой группе, ближайший к нему маршрутизатор посылает специальное сообщение о включении в группу (PIM-joint) узлу, объявленному для данной группы точкой встречи (RP). Число RP в сети может быть произвольным. Узел RP пересылает сообщение о включении узлу-отправителю (или отправителям). Если маршрутизатор не имеет информации о RP, включается схема, работающая для компактных групп. При обработке сообщения о включении в группу промежуточные маршрутизаторы формируют
часть дерева мультикастинг-маршрутов между RP и получателем. При отправке мультикастинг-пакета соответствующий маршрутизатор посылает узлу RP регистрационное сообщение (PIM-register), куда вкладывается информационный пакет. Если используется несколько RP, отправитель должен посылать пакеты всем RP. Получатель же должен быть подключен лишь к одному из RP. В случае, когда сообщение о включении достигнет отправителя раньше, чем RP, подключение осуществляется, минуя RP. Если необходимо оптимизировать дерево
доставки пакетов, маршрутизаторы-получатели должны послать сообщение о включении самому отправителю. После этого дерево соединений видоизменяется, некоторыми узлами, если требуется, посылается сообщение об отключении. Ниже приведен пример взаимодействия узлов при формировании дерева маршрутов 
в режиме SM-PIM (рис. 4.4.9.5.1).</p>

<p align="justify">Следует заметить, что большинство протоколов для маршрутизации мультимедийной информации формируют маршрут не от отправителя к получателю, а в обратном направлении. Это имеет под собой веские причины. Дерево рассылки должно быть построено так, чтобы поток отправителя как
можно дольше и меньше разветвлялся. Желательно, чтобы разветвления происходили как можно ближе к получателю. Это соображение проиллюстрировано на рис. 4.4.9.5.2. На рисунке условно, в виде сетки маршрутизаторов (желтые кружочки) показан фрагмент сети Интернет. Зеленым прямоугольником отмечен передатчик, а голубыми кружочками приемники – члены группы. Маршруты от передатчика к приемникам можно проложить индивидуально (выделены зеленым цветом), а можно и “коллективно” (синий цвет). От передатчика до маршрутизатора отмеченного
красным цветом следует один поток для всех приемников. Такое решение приводит к минимизации сетевой загрузки, ведь всем приемникам посылаются одни и те же пакеты. Чем позже их пути разойдутся, тем лучше. Именно этот алгоритм и реализует протокол PIM. Точки разветвления потоков на рис. 4.4.9.5.2 отмечены крестами (RP).</p>

<p align="center"><img src="image463.gif" tppabs="http://book.itep.ru/4/44/image463.gif"></p>
<p align="center">Рис. 4.4.9.5.1. Иллюстрация реализации протокола мультикастинг маршрутизации PIM</p>

<p align="justify">Получатель посылает PIM-joint пакет в RP, устанавливая канал от RP до получателя. Из рисунка видно, что исходный маршрут d-c-b-a длиннее оптимального d-b-a. Последний может быть реализован после посылки PIM-joint команды от a к d.</p>

<p align="justify">При решении транспортных задач в мультимедиа чаще используется протокол UDP (малая избыточность и отсутствие подтверждений).</p>

<p align="center"><img src="image464.gif" tppabs="http://book.itep.ru/4/44/image464.gif"></p>
<p align="center">Рис. 4.4.9.5.2.</p>

<p align="justify">Ниже приводится более подробное, хотя и неполное описание протокола pim.</p>
<b>

<p align="center">Используемые сокращения и термины</p>
</b><div align="center"><center>

<table border="10" cellspacing="1" cellpadding="5" width="700" bgcolor="ghostwhite">
  <tr>
    <td width="14%" valign="top"><p align="justify">Assert</td>
    <td width="86%" valign="top"><p align="justify">Сообщения assert используются для принятия решения, какой из параллельных маршрутизаторов, подключенных к локальной сети с множественным доступом, должен быть ответственным за ретрансляцию пакетов в LAN.</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">bootstrap</td>
    <td width="86%" valign="top"><p align="justify">Сообщения, посылаемые от узла к узлу в пределах домена. Все маршрутизаторы воспринимают эти сообщения для получения RP-информации. За рассылку сообщений в пределах домена bootstrap ответственен маршрутизатор BSR.</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">BSR</td>
    <td width="86%" valign="top"><p align="justify">bootstrap router – маршрутизатор, ответственный за рассылку сообщений bootstrap</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">C-RP</td>
    <td width="86%" valign="top"><p align="justify">candidate RP – кандидат в маршрутизаторы RP</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">DR</td>
    <td width="86%" valign="top"><p align="justify">designated router – специально выделенный маршрутизатор для рассылки мультикастинг данных.</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">(*,g)</td>
    <td width="86%" valign="top"><p align="justify">wild card мультикастная запись для группы g</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">Graft</td>
    <td width="86%" valign="top"><p align="justify">Сообщение, используемое в режиме PIM для компактных групп.</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">Hello</td>
    <td width="86%" valign="top"><p align="justify">Соседние маршрутизаторы шлют друг другу 
    сообщения hello. Маршрутизатор с наибольшим IP-адресом выбирается в качестве dr.</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">IGMP</td>
    <td width="86%" valign="top"><p align="justify">internet group management protocol – протокол управления группами</font></td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">IIF</td>
    <td width="86%" valign="top"><p align="justify">input interface – входной интерфейс</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">Join</td>
    <td width="86%" valign="top"><p align="justify">Подключение к дереву маршрутов</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">MBR</td>
    <td width="86%" valign="top"><p align="justify">Пограничный мультикастинг маршрутизатор</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">OIF</td>
    <td width="86%" valign="top"><p align="justify">output interface – выходной интерфейс</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">PMBR</td>
    <td width="86%" valign="top"><p align="justify">PIM multicast border router</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">Prune</td>
    <td width="86%" valign="top"><p align="justify">Отключение от дерева маршрутов</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">Register</td>
    <td width="86%" valign="top"><p align="justify">Когда источник отправляет данные группе в первый раз, его DR посылает уникастные сообщения register, в
    которые вкладывает информационные пакеты.</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">RP</td>
    <td width="86%" valign="top"><p align="justify">rendezvous point – маршрутизатор разветвления маршрута для потока данных</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">(*,*,rp)</td>
    <td width="86%" valign="top"><p align="justify">cпециальный тип маршрутных записей для поддержки 
    совместной работы DVMRP и PIM. Запись (*,*,rp) представляет собой объединение всех групп, которые работают через данную RP.</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">RPF</td>
    <td width="86%" valign="top"><p align="justify">reverse path forwarding – переадресация по пути возврата</font></td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">RPT</td>
    <td width="86%" valign="top"><p align="justify">RP-tree – дерево точек встречи</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">(s,g)</td>
    <td width="86%" valign="top"><p align="justify">Маршрутная запись, характеризующее состояние системы
    группа-отправитель (source-group)</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">SPT</td>
    <td width="86%" valign="top"><p align="justify">shortest pass tree – дерево кратчайших маршрутов</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">SP</td>
    <td width="86%" valign="top"><p align="justify">shortest pass – кратчайший путь (обозначение фрагмента дерева
    маршрутов)</td>
  </tr>
  <tr>
    <td width="14%" valign="top"><p align="justify">WC</td>
    <td width="86%" valign="top"><p align="justify">wild card</td>
  </tr>
</table>
</center></div>

<p align="justify">Целью протокола PIM является построение дерева маршрутов для рассылки мультикастных сообщений.</p>

<p align="justify">Маршрутизатор получает сообщения join/prune от соседних маршрутизаторов, которые обслуживают группы пользователей. Он переадресует информационные пакеты, адресованные группе G, только через те интерфейсы, через которые ранее было получено
сообщение join.</p>

<p align="justify">Специальный маршрутизатор DR (designated router) рассылает периодически сообщения join/prune в точки встречи (RP) для каждой группы, в которой имеются активные участники. Для описания дерева маршрута используются маршрутные записи, содержащие адрес отправителя, групповой адрес, номер входного интерфейса, через который принимаются пакеты, список интерфейсов, через которые осуществляется рассылка, таймеры, флаги и пр. Выходные интерфейсы указывают на соседние маршрутизаторы, через которые пролегает путь к RP.
В центре этого маршрутного дерева, включающего в себя всех членов группы, находится RP. Когда источник информации посылает что-то группе в первый раз, его DR отправляет уникастное сообщение register в RP.</p>

<p align="justify">Для того чтобы присоединиться к мультикатинг-группе G, ЭВМ передает IGMP-сообщение (или ICMP в случае IPv6). При этом предполагается, что ЭВМ будет выполнять функции получателя (R).</p>

<p align="justify">Когда DR получает уведомление о членстве новой группы от IGMP G, он просматривает соответствующие RP. DR формирует запись мультикастинг-маршрута для группы (*,g) [wild card мультикастная запись для группы G, определяющая ее состояние]. Адрес RP включается в специальное поле маршрутной записи, содержащейся в периодически рассылаемых сообщениях join/prune (см. рис. 4.4.9.5.9). При этом в список выходных интерфейсов включается тот, к которому подключен новый член группы, а в качестве входного интерфейса
указывается тот, через который посылаются уникастные пакеты к RP.</p>

<p align="justify">Когда не остается ни одного непосредственно подключенного члена группы, протокол IGMP уведомляет об этом DR. Если DR не имеет ни локальных, ни удаленных получателей, запись (*,g) ликвидируется.</p>

<p align="justify">Запись (*,g), инициирует формирование DR сообщения join/prune с RP-адресом в его join-списке и установленными битами WC и RPT. Равенство WC=1 говорит о том, что согласно этой записи будут пересылаться пакеты любого отправителя. Список удаления (prune) остается пустым. Когда 
бит RPT=1, это указывает на то, что подключение осуществлено через общее RP-дерево и, следовательно, сообщение join/prune будет идти по этому RP-дереву. Когда бит WC= 1, это означает, что адрес принадлежит RP, а получатели предполагают получать пакеты от всех отправителей.</p>

<p align="justify">Каждый маршрутизатор, расположенный по пути к отправителю, создает и отслеживает изменения маршрутной записи для (*,g), когда он получает сообщения join/prune с RPT=WC=1. Интерфейс, через который получено сообщение join/prune, добавляется к списку выходных интерфейсов (OIF) для (*,g). На основе этой записи каждый маршрутизатор по пути между получателем и RP посылает сообщение join/prune, в котором RP включен в список join. Поле данных этого пакета содержит мультикаст-адрес=G, join=RP, wc-бит, RPT-бит, prune=null.</p>

<p align="justify">Когда ЭВМ начинает посылать мультикастинг-пакеты группе, сначала DR должен доставить их в RP для последующей раздачи по дереву RP. DR отправителя в начале инкапсулирует каждый информационный пакет в сообщение register (см. рис. 4.4.9.5.7) и отправляет его по уникастному адресу RP данной группы. RP извлекает каждое сообщение register и переадресует вложенные информационные пакеты вдоль RP-дерева.</p>

<p align="justify">Если поток данных позволяет использовать дерево кратчайшего пути до отправителя (SPT), RP может сформировать новую маршрутную запись для дерева мультикаст-маршрута, специфичного для данного отправителя (SP-дерево).</p>

<p align="justify">DR отправителя прекратит инкапсуляцию информация в пакеты registers, когда он получит сообщение register-stop от RP. RP отравляет сообщения register-stop в качестве отклика на сообщение registers, если RP не имеет более активных членов группы.</p>

<p align="justify">Новый приемник может подключиться к существующему RP-дереву, для которого установлено обрезание (prune state) (например, из-за того, что другие получатели переключились на SP-деревья). В этом случае состояние обрезания аннулируется с тем, чтобы обеспечить доставку данных новому получателю.</p>

<p align="justify">В стабильном состоянии каждый маршрутизатор периодически посылает сообщения join/prune для каждой маршрутной записи PIM. Сообщения join/prune посылаются соседу, указанному в соответствующей записи. Такие сообщения позволяют отследить изменения состояния системы и топологию членства в группе.</p>

<p align="justify">Для того чтобы получить информацию о RP, все маршрутизаторы в пределах PIM-домена собирают сообщения bootstrap. Сообщения bootstrap пересылаются от узла к узлу в пределах домена. За организацию рассылки этих сообщений несет ответственность специальный маршрутизатор BSR (bootstrap router). Сообщения bootstrap используются для выполнения динамического выбора BSR, когда это необходимо, а также для получения информации об RP. Домен в этом контексте представляет собой набор смежных маршрутизаторов, поддерживающих
PIM, и сконфигурированных для совместной работы в рамках границ, определенных пограничными маршрутизаторами PMBR (PIM multicast border router), соединяющими PIM-домен с остальным Интернет.</p>

<p align="justify">Маршрутизаторы используют набор доступных RP (называемый {RP-set}), для того чтобы осуществить связь отдельных групп с соответствующими RP. Некоторое число маршрутизаторов в домене конфигурируется как кандидаты для выполнения функций BSR. Для назначения BSR в домене существуют простые правила выбора. Часть маршрутизаторов в домене конфигурируются также как кандидаты для работы в качестве RP (C-RP); как правило, это те же маршрутизаторы, что и кандидаты в BSR. Кандидат в RP периодически посылает BSR домена уникастное 
сообщение candidate-rp-advertisement (C-RP-ADVS). C-RP-ADVS включает в себя адрес C-RP, а также опционный групповой адрес и поле длины маски. BSR включает набор этих кандидатов в RP (набор RP), вместе с соответствующим групповым префиксом периодически рассылаемых сообщений.</p>

<p align="justify">Маршрутизаторы получают и запоминают содержимое сообщений bootstrap. Когда DR получает указание о членстве в группе от IGMP, DR использует хэш-функцию для установления соответствия между групповым адресом и одним из C-RP, чей префикс включает в себя данную группу. Для конкретной группы G, хэш-функция использует только те C-RP, чьи групповые префиксы покрывают G.
Когда соответствие установлено, DR посылает сообщение join/prune (или
уникастный пакет register) соответствующему rp.</p>

<p align="justify">Сообщения bootstrap информирует о работоспособности точек встречи (rp), обслуживающих сессию. Если RP включен в сообщение, он считается рабочим, в то время как отсутствие rp в сообщении, приводит к удалению его из списка, с которым работает алгоритм. Каждый маршрутизатор продолжает использовать содержимое, полученное в последнем сообщении bootstrap, пока 
не будет получено новое сообщение bootstrap.</p>

<p align="justify">Если зона PIM-домена теряют доступ к старому BSR, они выберут новый BSR, который разошлет RP-набор, содержащий RP, доступные в пределах данной зоны. Любая область в любой заданный момент времени обслуживается только одним BSR, который и осуществляет посылку сообщений bootstrap.</p>

<p align="justify">Для того чтобы обеспечить совместимость с сетями, работающими в режиме DM, с протоколами типа DVMRP, все пакеты, генерируемые в области PIM-SM, должны быть переправлены мультикастным пограничным маршрутизаторам области PMBR (multicast border router) и переадресованы в сеть DVMRP. Маршрутизатор PMBR размещается на границе домена PIM-SM и
взаимодействует с другими типами мультикаст-маршрутизаторов, например, такими,
которые поддерживают протокол DVMRP. Таким образом, PMBR должен поддерживать оба протокола. Для поддержки совместной работы все маршрутизаторы должны поддерживать специальный тип маршрутных записей, обозначаемых (*,*,rp).</p>

<p align="justify">Информационные пакеты, соответствуют записи (*,*,rp), если нет никаких других записи, например, (s,g) или (*,g), групповой адрес места назначения пакета согласуется с RP, указанным в записи (*,*,rp). В этом смысле запись (*,*,rp) представляет собой объединение всех групп, которые работают через данную точку встречи RP. PMBR инициализируют состояние (*,*,rp) для каждой RP в каждом доменном наборе RP. Состояние (*,*,rp) заставляет pmbr посылать сообщения (*,*,rp) join/prune каждой активной RP в домене. В результате деревья рассылки строятся так, что передают все пакеты, возникающие в пределах PIM-домена (и ретранслируются в точки встречи) в направлении
пограничных маршрутизаторов PMBR.</p>

<p align="justify">PMBR осуществляют также доставку внешних пакетов маршрутизаторам в пределах PIM-домена. Для решения этой задачи эти маршрутизаторы инкапсулируют внешние пакеты, полученные через интерфейсы DVMRP, в сообщения register, после чего уникастным образом переадресуют их в точку встречи RP PIM-домена. Сообщение register имеет бит, указывающий на то, что пакет сформирован пограничным маршрутизатором.</p>

<p align="justify">Информационные пакеты обрабатываются также как и при других мультикаст-схемах. Маршрутизатор сначала проверяет адреса отправителя и группы. Затем определяется адрес RP, если непосредственная передача невозможна. Если пути доставки не существует, пакет выбрасывается. При наличии пути выясняется интерфейс, через который должна производиться передача, и пакет 
переадресуется.</p>

<p align="justify">Информационные пакеты никогда не вызывают обрезания ветвей маршрутного дерева. Однако информационные пакеты могут запустить процессы, которые в конечном итоге приведут к такому результату.</p>

<p align="justify">Когда имеется несколько маршрутизаторов, соединенных с сетью, имеющей много каналов доступа, один из них должен быть выбран в качестве ретранслятора (DR; обычно это маршрутизатор с наибольшим IP-адресом). Это справедливо для любой точки сети в любое время. Процедуре выбора предшествует обмен сообщениями Hello.</p>

<p align="justify">При наличии параллельных проходов к источнику или RP для выбора маршрута применяются сообщения assert. Используя сообщения assert, адресованные `224.0.0.13' (группа all-pim-routers) в локальной сети, вышестоящий маршрутизатор может узнать, где осуществляется переадресация сообщений. Нижестоящие маршрутизаторы, получая сообщения assert, узнают, какой 
маршрутизатор выбран в качестве ретранслятора, и куда следует посылать сообщение join. Обычно это тот же нижележащий маршрутизатор-сосед (reverse path forwarding), но иногда это может быть и не так, например, когда в локальной сети используется несколько протоколов маршрутизации. RPF-сосед для конкретного отправителя или RP является следующим маршрутизатором, которому переправляются пакеты по пути к отправителю или RP. По этой причине он может рассматриваться как хорошая промежуточная инстанция для пересылки пакетов отправителем. </p>

<p align="justify">Когда приходит пакет в выходной интерфейс, маршрутизатор посылает сообщение assert в локальную сеть с множественным доступом, указывая, какую метрику он использует для достижения отправителя информационных пакетов. Маршрутизатор с наименьшим значением метрики и станет базовым ретранслятором. Все прочие вышестоящие маршрутизаторы вычеркнут этот интерфейс из своего списка выходных интерфейсов. Нижестоящие маршрутизаторы также производят сравнение, если ретранслятором не является RPF-сосед.</p>

<p align="justify">С понятием метрики связано и значение предпочтения метрики. Оно введено, чтобы решать проблемы в случае, когда вышестоящие маршрутизаторы использует другие уникастные протоколы маршрутизации. Численно меньшее значение предпочтения соответствует более высокому приоритету. Значение предпочтения рассматривается в качестве старшей части метрики при сравнении, которое осуществляется при обработке сообщений assert. Предпочтение может быть присвоено уникастному протоколу маршрутизации и должно быть взаимосогласованным для всех маршрутизаторов локальной сети с множественным доступом.</p>

<p align="justify">Сообщения assert нужны для маршрутных записей (*,g), так как деревья RP и SP для некоторых групп могут возникать зоны перекрытия в сетях с множественным доступом. Когда assert посылается для записи (*,g), RPT-бит устанавливается равным 1. Первый бит поля предпочтения всегда устанавливается равным 1, для того чтобы отметить, что проход соответствует RP-дереву. RPT-бит всегда обнуляется для предпочтения, которое относится к записям SP-деревьев. Это приводит к тому, что проход через SP-дерево выглядит всегда редпочтительнее,
чем проход через RP-дерево. Когда деревья SP и RP перекрываются для какой-то LAN, этот механизм устраняет дублирование для данной сети.</p>

<p align="justify">DR может уступить процесс (*,g) assert другому маршрутизатору LAN, если
существует несколько проходов к rp через lan. В этом
случае DR не является более "ближайшим" маршрутизатором для местных получателей и он удаляет LAN из своего (*,g) списка выходных интерфейсов. Маршрутизатор-победитель становится “ближайшим” и ответственным за рассылку сообщений (*,g) join для RP.</p>

<p align="justify">Подавление join/prune может использоваться в локальных сетях с множественным доступом, для того чтобы сократить число дублирующих управляющих сообщений. Для нормальной работы протокола этого не требуется. Если получено сообщение join/prune, которое соответствует существующим маршрутным записям (s,g), (*,g) или (*,*,rp) для данного входного интерфейса, а поле holdtime сообщения join/prune больше, чем join/prune-holdtime получателя, может быть запущен таймер (join/prune-suppression-таймер) маршрутной записи
получателя с тем, чтобы заблокировать последующие сообщения join/prune.
После завершения работы таймера получатель отправляет сообщение join/prune, и
возобновляет периодическую посылку join/prune, для данной записи. Таймер join/prune-suppression должен перезапускаться каждый раз, когда приходит сообщение join/prune с большим значением holdtime.</p>

<p align="justify">Когда уникастная маршрутизация претерпевает изменения, RPF производит проверку активных маршрутных записей (s,g), (*,g) и (*,*,rp) и вносит необходимые поправки. В частности, если в списке выходных интерфейсов появляется новый принимающий интерфейс, то он удаляется из этого списка. Предшествующий входной интерфейс может быть добавлен в список выходных интерфейсов с помощью последующих сообщений join/prune, поступающих от нижестоящих узлов. Сообщения join/prune, полученные текущим входным интерфейсом, игнорируются, а сообщения, полученные новыми или существующими выходными интерфейсами, обрабатываются. Остальные выходные интерфейсы останутся в прежнем состоянии до тех пор, пока не будут отключены нижележащими маршрутизаторами или по таймауту из-за отсутствия соответствующих сообщений
join/prune. Если маршрутизатор имеет запись (s,g) с установленным битом spt, а обновленная запись IIF(s,g) не отличается от IIF(*,g) или IIF(*,*,rp), тогда маршрутизатор переводит бит SPT в нулевое состояние.</p>

<p align="justify">Соседи-маршрутизаторы, поддерживающие протокол pim, периодически обмениваются сообщениями Hello (см. рис. 4.4.9.5.6). Сообщения Hello могут также рассылаться мультикастным образом с использованием адреса 224.0.0.13 (группа all-pim-routers). Пакет содержит значение holdtime (время сохранения информации). </p>

<p align="justify">Когда маршрутизатор получает сообщение hello, он запоминает IP-адрес соседа, устанавливает таймер отправки на время, соответствующее holdtime, заключенное в Hello, и определяет выделенный маршрутизатор (DR) для данного интерфейса. В качестве DR выбирается объект с наибольшим 
Ip.</p>

<p align="justify">Когда маршрутизатор, который является активным DR, получает Hello от нового соседа (например, от IP-адреса, которого нет в таблице DR), DR уникастным образом передает RP-информацию новому соседу.</p>

<p align="justify">PIM-соседи, от которых в течение определенного времени не поступало сообщений Hello, считаются отключившимися. Если DR отключился, выбирается новый DR из числа соседей с наибольшим IP-адресом.</p>

<p align="justify">Сообщения join/prune служат, для того чтобы подключить или удалить ветвь мультикастинг-дерева рассылки. Сообщение содержит как join-, так и prune-списки, любой из них может иметь нулевую длину. Эти сообщения содержат все подключенные и отсоединенные источники данных, достижимые через данный узел адресат сообщения. Период отправки сообщений join/prune определяется значением [join/prune-period]. </p>

<p align="justify">Маршрутизатор периодически посылает сообщения join/prune каждому конкретному RPF-соседу, соответствующему каждой маршрутной записи (s,g), (*,g) и (*,*,rp). Сообщения join/prune посылаются только тогда, когда RPF-сосед является PIM-соседом. </p>

<p align="justify">Кроме периодически рассылаемых сообщений некоторые из join/prune пакетов могут генерироваться как следствие следующих событий:</p>

<ol type="a">
  <li>создана новая маршрутная запись или </li>
  <li>список выходных интерфейсов изменился из нулевого в ненулевое состояние или наоборот.</li>
</ol>

<p align="justify">Может так случиться, что размер сообщения join/prune превысит MTU сети. В этом случае сообщение может быть фрагментировано, информация, относящаяся к различным группам, будет послана в разных пакетах. Однако, если сообщение join/prune должно быть фрагментировано, полный prune-список, соответствующий группе G, должен быть включен в одно сообщение join/prune согласно RP-дереву join для G. Если такая семантическая
фрагментация невозможна, при транспортировке пакетов от соседа к соседу должна использоваться IP-фрагментация.</p>

<p align="justify">Для любой новой записи (s,g), (*,g) или (*,*,rp),
сформированной входящим сообщение join/prune, бит SPT сбрасывается.</p>

<p align="justify">Если запись имеет таймер join/prune-suppression, полученное сообщение join/prune не указывает на маршрутизатор в качестве места назначения, тогда принимающий маршрутизатор рассматривает join- и prune-списки, с тем чтобы выяснить, нет ли там адресов полностью соответствующих существующим состояниям (s,g), (*,g) или (*,*,rp), для которых принимающий маршрутизатор осуществляет рассылку сообщений join/prune. Элемент join- или prune-списка полностью соответствует маршрутной записи, только тогда, когда их IP-адреса и RPT-флаги тождественны. Если приходящее сообщение join/prune полностью соответствует существующим записям (s,g), (*,g) или (*,*,rp), а сообщение join/prune 
приходит на входной интерфейс для данной записи, маршрутизатор сравнивает holdtime сообщения со своим собственным значением join/prune-holdtime. Если его значение join/prune-holdtime меньше, запускается таймер join/prune-suppression. Если join/prune-holdtime равно holdtime сообщения, коллизия разрешается в
пользу отправителя сообщения join/prune, который имеет больший ip-адрес.
Когда время join/prune таймера истекает, маршрутизатор отправляет сообщение join/prune для соответствующей маршрутной записи.</p>

<p align="justify">Когда отправитель начинает отправку данных группе, его пакеты инкапсулируются в сообщения register и посылаются в RP. Если скорость передачи гарантируется каналом, RP устанавливает соответствующее состояние для отправителя и начинает посылать сообщения (s,g) join/prune отправителю с S в join-списке.</p>

<p align="justify">Когда DR получает сообщение register-stop, он перезапускает таймер register-suppression в соответствующей записи (s,g) на register-suppression-timeout секунд. Если имеются данные, которые должны быть зарегистрированы, DR может послать RP сообщение register нулевой длины, за probe-time секунд до истечения времени таймера register- suppression.</p>

<p align="justify">Сообщения assert используются для принятия решения, какой из
параллельных маршрутизаторов, подключенных к локальной сети с множественным доступом, должен быть ответственным за ретрансляцию пакетов в LAN.</p>

<p align="justify">Все управляющие сообщения PIM имеют номер протокола 103. Сообщения PIM являются либо уникастными (например, registers и register-stop), либо мультикастными для группы `all-pim-routers' `224.0.0.13' (например, join/prune, asserts, и т.д.). Формат заголовка пакета протокола PIM показан на рис. 4.4.9.5.3.</p>

<p align="center"><img src="image465.gif" tppabs="http://book.itep.ru/4/44/image465.gif"></p>
<p align="center">Рис. 4.4.9.5.3. Формат заголовка сообщения PIM </p>

<p align="justify">Поле <i>OIM VER</i> – версия протокола (в настоящее
время = 2). Поле <i>тип</i> характеризует PIM-сообщение. Возможные значения поля <i>тип</i> представлены в таблице 4.4.9.5.1.</p>

<p align="center">Таблица 4.4.9.5.1. Коды типа сообщений</p>
<div align="center"><center>

<table border="10" cellspacing="1" cellpadding="5" width="700" bgcolor="ghostwhite">
  <tr>
    <td width="19%" valign="top" bgcolor="gainsboro"><p align="justify">Код поля <i>тип</i></td>
    <td width="81%" valign="top" bgcolor="gainsboro"><p align="justify">Тип сообщения pim</td>
  </tr>
  <tr>
    <td width="19%" valign="top"><p align="center">0</td>
    <td width="81%" valign="top"><p align="justify">hello</td>
  </tr>
  <tr>
    <td width="19%" valign="top"><p align="center">1</td>
    <td width="81%" valign="top"><p align="justify">register</td>
  </tr>
  <tr>
    <td width="19%" valign="top"><p align="center">2</td>
    <td width="81%" valign="top"><p align="justify">register-stop</td>
  </tr>
  <tr>
    <td width="19%" valign="top"><p align="center">3</td>
    <td width="81%" valign="top"><p align="justify">join/prune </td>
  </tr>
  <tr>
    <td width="19%" valign="top"><p align="center">4</td>
    <td width="81%" valign="top"><p align="justify">bootstrap</td>
  </tr>
  <tr>
    <td width="19%" valign="top"><p align="center">5</td>
    <td width="81%" valign="top"><p align="justify">assert</td>
  </tr>
  <tr>
    <td width="19%" valign="top"><p align="center">6</td>
    <td width="81%" valign="top"><p align="justify">graft (используется только в pim-dm)</td>
  </tr>
  <tr>
    <td width="19%" valign="top"><p align="center">7</td>
    <td width="81%" valign="top"><p align="justify">graft-ack
    (используется только в pim-dm)</td>
  </tr>
  <tr>
    <td width="19%" valign="top"><p align="center">8</td>
    <td width="81%" valign="top"><p align="justify">candidate-rp-advertisement</td>
  </tr>
</table>
</center></div>

<p align="justify">Поле <i>длина адреса</i> характеризует длину кода адреса в байтах. Поле <i>контрольная сумма</i> вычисляется методом суммирования всего
pim-сообщения по модулю 1, это поле имеет длину 16 бит. Формат закодированного группового адреса показан на рис. 4.4.9.5.4.</p>

<p align="center"><img src="image466.gif" tppabs="http://book.itep.ru/4/44/image466.gif"></p>
<p align="center">Рис. 4.4.9.5.4. Формат закодированного группового адреса</p>

<p align="justify">Поле <i>длина маски</i> имеет 8 бит. Значение поля определяет число последовательных бит, выровненных по левому краю, которые определяют адрес. Маска равна или меньше длины адреса * 8 (то есть 32 бита для IPv4 и 128 для IPv6). Поле <i>групповой мультикаст адрес</i> содержит адрес группы и имеет число байт, равное указанному в поле <i>длина адреса</i>. Формат 
кодированного адреса отправителя показан на рис. 4.4.9.5.5.</p>

<p align="center"><img src="image467.gif" tppabs="http://book.itep.ru/4/44/image467.gif"></p>
<p align="center">Рис. 4.4.9.5.5. Формат кодированного адреса отправителя</p>

<p align="justify">Поле бит <i>s</i> (бит рассеянности) содержит 1 для PIM-SM. Этот бит используется для обеспечения совместимости с PIM v.1.</p>

<p align="justify">Поле бит <i>W</i> (бит WC). Бит WC =1, если подключение (join) 
или удаление (prune) используются для маршрутной записи (*,g) или (*,*,rp).
Если wc=0, join или prune используются для маршрутной записи (s,g), где s – адрес отправителя. Сообщения join и prune, посылаемые в RP, должны иметь этот бит равным 1.</p>

<p align="justify">Поле бит <i>R</i> (бит RPT). Бит RPT=1, если информация о (s,g) послана в RP. Если RPT=0, информация должна быть послана S, где S – адрес отправителя.</p>

<p align="justify">Поле <i>длина маски</i> имеет длину 8 бит.
Значение этого поля охарактеризовано выше в комментарии к рисунку 4.4.9.5.4.</p>

<p align="justify">Поле <i>адрес отправителя</i> имеет длину, определяемую полем заголовка <i>длина адреса</i>. Для IPv4, она равна 4 октетам. Формат сообщения Hello показан на рис. 4.4.9.5.6.</p>

<p align="justify">Первые два байта представляют собой заголовок PIM-сообщения. Поле <i>optiontype</i> определяет тип опции, значение которой задано в поле optionvalue. Поле <i>optionlength</i> задает длину поля <i>optionvalue</i>  в байтах.  Поле <i>optionvalue</i> имеет переменную длину и содержит значение опции. Поле опция может содержать следующие значения:</p>

<p align="center"><img src="image468.gif" tppabs="http://book.itep.ru/4/44/image468.gif"></p>
<p align="center">Рис. 4.4.9.5.6. Формат сообщения Hello</p>

<p align="justify">optiontype = 1; optionlength = 2; optionvalue = holdtime; где
holdtime равно времени в секундах, в течение которого получатель должен сохранять доступность к соседу. Если holdtime установлено равным `0xFFFF', получатель этого сообщения никогда не прервет соединение с соседом по таймауту. Это может использоваться для каналов ISDN, для того чтобы избежать поддержания канала путем периодической посылки сообщений Hello. Более того, если holdtime= 0, информация объявляется устаревшей немедленно. Диапазон значений optiontype 
2 – 16 зарезервирован на будущее. Сообщение register посылается DR или PMBR в RP, когда
необходимо передать мультикаст-пакет по rp-дереву. IP-адрес отправителя при этом равен адресу DR, а адрес места назначения – адресу RP. Формат сообщения register показан на рис. 4.4.9.5.7. Постоянная часть заголовка здесь идентична, показанной на рис. 4.4.9.5.3.</p>

<p align="center"><img src="image469.gif" tppabs="http://book.itep.ru/4/44/image469.gif"></p>
<p align="center">Рис. 4.4.9.5.7. Формат сообщения register</p>

<p align="justify">Поле<i> B</i> – (бит border) пограничный бит. B=1, если маршрутизатор непосредственно соединен с отправителем. Поле <i>N</i> – бит нулевого регистра. n устанавливается DR равным 1 при тестировании RP до истечения времени регистрации (register-suppression timer). Поле <i>информационный мультикаст-пакет</i> представляет собой оригинальное сообщение, посланное отправителем.</p>

<p align="justify">Сообщение register-stop является уникастным, направляемым от RP к отправителю сообщения register. IP-адрес отправителя является адресом, к которому направлялось сообщение регистрации. IP-адрес места назначения равен адресу отправителя сообщения register. Формат сообщения register-stop показан на рис. 4.4.9.5.8.</p>

<p align="center"><img src="image470.gif" tppabs="http://book.itep.ru/4/44/image470.gif"></p>
<p align="center">Рис. 4.4.9.5.8. Формат сообщения register-stop</p>

<p align="justify">Поле <i>закодированный групповой адрес</i> имеет тот же смысл, что и на рис. 4.4.9.5.4. Для сообщений register-stop поле <i>длины маски</i> содержит длину адреса * 8 (32 для IPv4), если сообщение послано для одной группы.</p>

<p align="justify">Поле <i>уникастный адрес отправителя</i> представляет собой IP-адрес ЭВМ отправителя из мультикастного информационного пакета. Длина этого поля в байтах задано полем <i> длина адреса</i>. Значение (0.0.0.0) может быть использовано для обозначения любого адреса.</p>

<p align="justify">Сообщение join/prune посылается маршрутизаторами в
направлении вышестоящих отправителей и RP. Сообщения join служит для
построения совместно используемых маршрутных деревьев (RP-деревьев) или деревьев отправителей (SPT). Сообщения prune посылаются для отключения деревьев отправителей, когда участники покидают группу, а также для отправителей, которые не используют общее дерево. Формат сообщения join/prune показан на рис. 4.4.9.5.9.</p>

<p align="center"><img src="image471.gif" tppabs="http://book.itep.ru/4/44/image471.gif"></p>
<p align="center">Рис. 4.4.9.5.9. Формат сообщения join/prune</p>

<p align="justify">Поле <i>адрес вышестоящего соседа</i> представляет собой IP-адрес RPF или вышестоящего соседа. Поле <i>holdtime</i> характеризует время в секундах, в течение которого получатель должен поддерживать активное состояние join/prune. Если holdtime сделано равным `0xffff', получатель сообщения отключает таймаут для данного выходного интерфейса. Если holdtime сделано равным `0', таймаут происходит немедленно. Поле <i>число групп</i> равно количеству мультикаст-групп, содержащихся в сообщении.</p>

<p align="justify">Поле <i>закодированный мультикастный групповой адрес</i> имеет формат, показанный на рис. 4.4.9.5.4. Произвольная группа (wildcard) (*,*,rp) характеризуется адресом 224.0.0.0 и `4' в поле <i>длина маски</i>. Подключение (*,*,rp) имеет биты WC и RPT равные 1.</p>

<p align="justify">Поле <i>число подключенных отправителей</i> равно количеству адресов подключенных отправителей для данной группы. Поля <i>адрес подключенного отправителя</i> -1 .. N представляют собой список отправителей, которым посылающий маршрутизатор переправляет мультикастные дейтограммы при получении их через интерфейс, на который пришло данное сообщение. Формат полей кодированного адреса отправителя следует описанию на рис. 4.4.9.5.5.</p>

<p align="center"><img src="image472.gif" tppabs="http://book.itep.ru/4/44/image472.gif"></p>
<p align="center">Рис. 4.4.9.5.10. Формат сообщения bootstrap</p>

<p align="justify">Сообщения bootstrap пересылаются мультикастным способом группе `all-pim-routers', через все интерфейсы, имеющие PIM-соседей (за исключением того, через который получено сообщение). Сообщения bootstrap генерируются в BSR и посылаются с TTL=1. Формат сообщения bootstrap показан на рис. 4.4.9.5.10.</p>

<p align="justify">Сообщение bootstrap делится на семантические фрагменты, если исходное сообщение превосходит предельный размер пакета. Формат этих фрагментов представлен ниже (см. также рис. 4.4.9.5.10):</p>

<p align="justify">Поле <i><b>метка фрагмента</b></i> является случайным числом и служит для идентификации фрагментов принадлежащих одному и тому же сообщению. Фрагменты одного и того же сообщения имеют идентичные метки фрагмента. Поле <i><b>длина хэш>-маски</b></i> – это длина маски хэш функции в битах. Для IPv4 рекомендуется значение 30, а для IPv6 - 126. Поле <i><b>BSR-приоритет</b></i> содержит значение BSR-приоритета для включенного BSR. Это поле рассматривается как старший байт при сравнении BSR-адресов. Поле <i><b>уникастный BSR-адрес</b></i> является IP-адресом маршрутизатора (bootstrap) домена. Размер этого поля в байтах специфицирован в поле <i>длина адреса</i>. Поля <i><b>закодированный групповой адрес</b></i> -1..n является групповым префиксом (адрес и маска), с которым ассоциируются кандидаты RP. Поля <i><b>число RP -1..N</b></i> равны числу адресов кандидатов RP, включенных в сообщение bootstrap для соответствующего группового префикса. Маршрутизатор не замещает старый RP-набор для данного группового префикса до тех пор, пока не получит новое число RP-адресов для этого префикса. Адреса могут содержаться в
нескольких фрагментах. Если получена только часть RP-набора для данного префикса, маршрутизатор эту часть выбрасывает, не изменяя RP-набора. Поля <i><b>FRAG RP-cnt-1..m</b></i> представляет собой число адресов кандидатов RP, включенных в этот фрагмент сообщения bootstrap, для соответствующего группового префикса. Поле `<i><b>FRAG RP-cnt</b></i>' облегчает разбор RP-набора для данного группового префикса, когда он размещается в более чем одном фрагменте. Поля <i><b>уникастные rp-адреса -1..m</b></i> представляют собой адреса кандидатов RP, для соответствующего группового префикса. Длина поля в байтах специфицировано полем <i>длина адреса.</i> Поля <i><b>rp1..m-holdtime</b></i> 
характеризуют значения holdtime для соответствующих RP. Это поле копируется из поля `holdtime' RP, записанного в BSR.</p>

<p align="justify">Сообщение assert посылается когда мультикастный информационный пакет получен выходным интерфейсом, соответствующим (s,g) или (*,g), относящимся к отправителю. Формат такого сообщения представлен на рис. 4.4.9.5.11.</p>

<p align="center"><img src="image473.gif" tppabs="http://book.itep.ru/4/44/image473.gif"></p>
<p align="center">Рис. 4.4.9.5.11. Формат сообщения assert</p>

<p align="justify">Поле <i>закодированный групповой адрес</i> характеризует групповой адрес места назначения пакетов, который явился причиной посылки сообщения assert. Поле <i>уникастный адрес отправителя</i> содержит IP-адрес отправителя из дейтограммы, вызвавшей посылку мультикастного
пакета Assert. Длина поля в байтах определена полем длины адреса. Поле <i>R</i>
представляет собой RPT-бит. Если IP мультикастинг дейтограмма, вызвавшая посылку пакета assert направляется вниз по RP-дереву, тогда RPT-бит равен 1. Если маршрутизация осуществляется вдоль SPT, бит равен 0. Поле <i>предпочтение</i> несет в себе значения кода предпочтения, присвоенного
уникастному протоколу маршрутизации, который организует проход до ЭВМ. Поле <i>метрика</i> содержит значение метрики для таблицы маршрутизации. Единицы измерения должны соответствовать требованиям маршрутного протокола.</p>

<p align="justify">Сообщения кандидата RP посылаются периодически C-RP способом и уникастно адресуются к BSR. Формат таких сообщений показан на рис. 4.4.9.5.12.</p>

<p align="center"><img src="image474.gif" tppabs="http://book.itep.ru/4/44/image474.gif"></p>
<p ALIGN="CENTER">Рис. 4.4.9.5.12. Формат сообщения кандидата RP (C-RP)</p>

<p ALIGN="JUSTIFY">Поле <i># префиксов (Prefix-Cnt)</i> содержит количество кодированных групповых адресов, включенных в сообщение, указывая групповые префиксы, для которых производится C-RP оповещение. Значение поля Prefix-Cnt = `0' предполагает использование префикса 224.0.0.0 с длиной маски 4, что означает - все мультикастные группы. Если C-RP не снабжена информацией о групповом префиксе, C-RP заносит в поле значение по умолчанию равное `0'. Поле 
<i><b>A</b></i> характеризует бит указания. Этот бит указывает, что BSR не должен переписывать информацию о групповых префиксах, приведенную в C-RP оповещении. В большинстве случаев C-RP устанавливает этот бит, равным 0. Поле <i><b>Holdtime</b></i> содержит значение времени, в течение которого оповещение корректно. Это поле позволяет определить время, когда оповещение устареет. Поле <i><b>уникастный RP-адрес</b></i> представляет собой адрес интерфейса, который объявляется кандидатом в RP. Длина этого поля в байтах определена полем <i>длина адреса</i>. Поле <i><b>закодированный групповой адрес -1..n</b></i> является групповым префиксом, для которого производится уведомление кандидатом в RP.</p>

<p ALIGN="CENTER"><FONT SIZE="4"><b>Литература</b></FONT> </p>

<table CELLSPACING="0" BORDER="0" CELLPADDING="2" WIDTH="800">
  <tr>
    <td WIDTH="3%" VALIGN="TOP"><p ALIGN="JUSTIFY">1</td>
    <td WIDTH="97%" VALIGN="TOP"><p ALIGN="JUSTIFY">Deering, S., D.Estrin, D.Farinacci, V.Jacobson, C.Liu, L.Wei, P.Sharma, and A.Helmy. Protocol independent multicast (pim) :
    Motivation and architecture. Work in Progress.</td>
  </tr>
  <tr>
    <td WIDTH="3%" VALIGN="TOP"><p ALIGN="JUSTIFY">2</td>
    <td WIDTH="97%" VALIGN="TOP"><p ALIGN="JUSTIFY">Deering, S., D.Estrin, D.Farinacci,
    V.Jacobson, C.Liu, and L.Wei. The PIM architecture for wide-area multicast routing. ACM
    Transactions on Networks, April 1996.</td>
  </tr>
  <tr>
    <td WIDTH="3%" VALIGN="TOP"><p ALIGN="JUSTIFY">3</td>
    <td WIDTH="97%" VALIGN="TOP"><p ALIGN="JUSTIFY">Estrin, D., D.Farinacci, V.Jacobson,
    C.Liu, L.Wei, P.Sharma, and A.Helmy. Protocol independent multicast-dense mode (pim-dm):
    Protocol specification. Work in Progress.</td>
  </tr>
  <tr>
    <td WIDTH="3%" VALIGN="TOP"><p ALIGN="JUSTIFY">4</td>
    <td WIDTH="97%" VALIGN="TOP"><p ALIGN="JUSTIFY">Deering, S. Host extensions for ip
    multicasting, Aug 1989. RFC1112.</td>
  </tr>
  <tr>
    <td WIDTH="3%" VALIGN="TOP"><p ALIGN="JUSTIFY">5</td>
    <td WIDTH="97%" VALIGN="TOP"><p ALIGN="JUSTIFY">Fenner, W. Internet group management
    protocol, version 2. Work in Progress.</td>
  </tr>
  <tr>
    <td WIDTH="3%" VALIGN="TOP"><p ALIGN="JUSTIFY">6</td>
    <td WIDTH="97%" VALIGN="TOP"><p ALIGN="JUSTIFY">Atkinson, R. Security architecture for the
    internet protocol, August 1995. RFC-1825.</td>
  </tr>
  <tr>
    <td WIDTH="3%" VALIGN="TOP"><p ALIGN="JUSTIFY">7</td>
    <td WIDTH="97%" VALIGN="TOP"><p ALIGN="JUSTIFY">Ballardie, A.J., P.F. Francis, and
    J.Crowcroft. Core based trees. In Proceedings of the ACM SIGCOMM, San Francisco, 1993.</td>
  </tr>
</table>





</TD></TR>

<TR bgcolor="steelblue"><TD VALIGN="TOP" bgcolor="steelblue" LINK="#0000FF"><P ALIGN="center">

<FONT color="white"><B> Previous: </B></FONT>
<A HREF="dvr_4494.htm" tppabs="http://book.itep.ru/4/44/dvr_4494.htm"><FONT COLOR="lightblue">4.4.9.4 Протокол мультикастинг-маршрутизации DVMRP</FONT></A>



<FONT color="white"><B> &nbsp; &nbsp;UP:</B></FONT>
<A HREF="inter_44.htm" tppabs="http://book.itep.ru/4/44/inter_44.htm"><FONT COLOR="lightblue">4.4 Интернет</FONT></A>


<BR>

<FONT color="white"><B>  Down:</B></FONT>
<A HREF="rut_4411.htm" tppabs="http://book.itep.ru/4/44/rut_4411.htm"><FONT COLOR="lightblue">4.4.11 Протоколы    маршрутизации (обзор, таблицы маршрутизации, вектор расстояния)</FONT></A>



<FONT color="white"><B> &nbsp; &nbsp;Next:</B></FONT>
<A HREF="rsv_4496.htm" tppabs="http://book.itep.ru/4/44/rsv_4496.htm"><FONT COLOR="lightblue">4.4.9.6 Протокол резервирования ресурсов RSVP</FONT></A>

</TD>
  </TR>
</table>
</BODY>
</HTML>