<HTML><HEAD>
<!-- Meta http equivalent was here                                     -->
<META NAME="keywords" CONTENT="can
bosch
dlc
SYNC_SEG
csma/cd 
iso 11898 


">
<TITLE>4.1.4 Сети    управления и сбора данных в реальном масштабе времени (CAN)</TITLE>
</HEAD>
<BODY background="gainsboro" tppabs="http://book.itep.ru/gainsboro" link="#0000FF">

<center>
<table BORDER="0" CELLSPACING="1" CELLPADDING="5" bgcolor="ghostwhite">
  <tr>
    <td VALIGN="TOP" bgcolor="steelblue" LINK="#0000FF"><p align="center">

<A HREF="802_413.htm" tppabs="http://book.itep.ru/4/41/802_413.htm">  <IMG ALIGN=BOTTOM ALT="previous" SRC="k_prev.jpg" tppabs="http://book.itep.ru/k_prev.jpg"></A>


<A HREF="eth_411.htm" tppabs="http://book.itep.ru/4/41/eth_411.htm">   <IMG ALIGN=BOTTOM ALT="up"   SRC="k_up.jpg" tppabs="http://book.itep.ru/k_up.jpg"></A>


<A HREF="apply_42.htm" tppabs="http://book.itep.ru/4/42/apply_42.htm"><IMG ALIGN=BOTTOM ALT="down" SRC="k_down.jpg" tppabs="http://book.itep.ru/k_down.jpg"></A>


<A HREF="arc_415.htm" tppabs="http://book.itep.ru/4/41/arc_415.htm"><IMG ALIGN=BOTTOM ALT="next" SRC="k_next.jpg" tppabs="http://book.itep.ru/k_next.jpg"></A>

<A HREF="intro1.htm" tppabs="http://book.itep.ru/1/intro1.htm">  <IMG ALIGN=BOTTOM ALT="index" SRC="k_indx.jpg" tppabs="http://book.itep.ru/k_indx.jpg"></A>
<BR>

<B> <FONT COLOR="white">Previous: </FONT></B>
<A HREF="802_413.htm" tppabs="http://book.itep.ru/4/41/802_413.htm"><FONT COLOR="lightblue">4.1.3 IEEE 802.4 (Маркерная шина)</FONT></A>


<B><FONT COLOR="white">&nbsp;&nbsp; UP:</FONT> </B>
<A HREF="eth_411.htm" tppabs="http://book.itep.ru/4/41/eth_411.htm"><FONT COLOR="lightblue">4.1.1 Ethernet (IEEE 802.3)</FONT></A>
<BR>


<B><FONT COLOR="white"> Down:</FONT></B>
<A HREF="apply_42.htm" tppabs="http://book.itep.ru/4/42/apply_42.htm"><FONT COLOR="lightblue">4.2 Наложенные сети</FONT></A><BR>


<B><FONT COLOR="white">&nbsp; &nbsp; Next:</FONT></B>
<A HREF="arc_415.htm" tppabs="http://book.itep.ru/4/41/arc_415.htm"><FONT COLOR="lightblue">4.1.5 Локальные сети ArcNet</FONT></A>

</TD></TR>
<TR><TD ALIGN=CENTER>   
<FONT color="#0000FF" size=6><B>4.1.4 Сети    управления и сбора данных в реальном масштабе времени (CAN)</B></FONT><br>
<FONT size=3>Семенов Ю.А. (ГНЦ ИТЭФ)</FONT></p>

</TD></TR>
<TR><TD>
<!--new-->
<P ALIGN="CENTER"> <IMG SRC="can_wo.jpg" tppabs="http://book.itep.ru/4/41/can_wo.jpg"></P>
<P ALIGN="justify">Стандарт can (controller area network - 
<a href="tppmsgs/msgs2.htm#244" tppabs="http://www.kvaser.se/can/protocol/index.htm">http://www.kvaser.se/can/protocol/index.htm</a> или 
<a href="tppmsgs/msgs2.htm#245" tppabs="http://www.omegas.co.uk/can/canworks.htm">http://www.omegas.co.uk/can/canworks.htm</a>) 
был разработан в Германии компанией robert Bosch gmbh для автомобильной промышленности (1970 годы). Сеть CAN ориентирована на последовательные каналы связи, выполненные из скрученных пар проводов (или оптических волокон), стандарт определяет протоколы физического уровня и субуровеней MAC и 
LLC. Все узлы сети равноправны и подключаются к общему каналу. Уровни сигналов протоколом не нормированы. В CAN использована кодировка типа NRZ (non return to zero).</p>

<p align="justify">Высокая надежность и дешевизна сделала сети CAN привлекательными для 
промышленности и науки. Сеть предназначена для сбора информации и управления в реальном масштабе 
времени, но может быть использована и для других целей. Канал can реализует принцип множественного 
доступа с детектированием столкновений (CSMA/CD - carrier sense multiple access with collision 
detection, аналогично Ethernet). Сеть может содержать только один сегмент. В соответствии со 
стандартом ISO 11898 сеть способна работать при обрыве одного из проводов, при закоротке одного из 
проводов на шину питания или на землю. Скорость работы канала 
программируется и может достигать 1 Мбит/с. Недиструктивная схема арбитража позволяет сделать 
доступ к общему каналу существенно более эффективным, чем в случае Ethernet. В настоящее время 
действуют две версии стандарта с полями арбитража длиной в 11 бит (2.0a) и 29 бит (расширенная 
версия, 2.0b). Код арбитража одновременно является идентификатором кадра и задается на фазе 
инициализации сети. При одновременной попытке передачи кадров двумя узлами арбитраж выполняется 
побитно с использованием схемы проволочного “И”, при этом доминантным состоянием является 
логический “0”. Выигравший соревнование узел продолжает передачу, а проигравший ждет момента, 
когда канал освободится. Код-адрес объекта (узла CAN) задается с помощью переключателей на плате 
CAN при формировании сети. </p>

<p align="justify">Когда канал свободен, любой из подключенных узлов, может начать передачу. Кадры могут иметь переменную, но конечную длину. Формат информационного кадра сети CAN, содержащего семь полей, показан на рис. 4.1.4.1.</p>
</font><p align="center"><img src="image189.gif" tppabs="http://book.itep.ru/4/41/image189.gif"></p>
<p align="center">Рис. 4.1.4.1 Стандартный информационный кадр 1 2.0a CAN </p>

<p align="justify">Кадр начинается с доминантного бита начала кадра (логический нуль, SOF - start 
of frame). Далее следует поле арбитража (идентификатор кадра), содержащее 11 бит (эти разряды 
носят имена id-28, ..., id-18) и завершающееся битом RTR (remote transmission request) удаленного 
запроса передачи. В информационном кадре RTR=0, для кадра 
запроса RTR=1. Семь наиболее значимых бит id-28 - id-22 не должны быть никогда все одновременно 
равными 1. Первым передается бит id28. Доминантные биты r0 и r1 (=0) зарезервированы для будущего 
использования (в некоторых спецификациях бит r1 называется IDE и относится для стандартных кадров 
к полю управления). Поле DLC (data length code; биты поля имеют имена dcl3 - dcl0) несет в себе 
код длины поля данных в байтах. Поле данных, размещенное вслед за ним, может иметь переменную 
длину или вообще отсутствовать. CRC - циклическая контрольная сумма. В качестве образующего 
полинома при вычислении CRC используется x<sup>15</sup> + x<sup>14</sup> + x<sup>10</sup> + 
x<sup>8 </sup>+ x<sup>7</sup> + x<sup>4</sup> + x<sup>3</sup> + 1. Формально, следующий за 
контрольной суммой бит-разграничитель (=1) принадлежит полю CRC. Поле отклика (ack) содержит два 
бита, первый из которых первоначально имеет уровень 1, а узлы получатели меняют его значение на 
доминантное (логический 0). Бит используется для сообщения о корректности контрольной суммы. 
Второй бит поля всегда имеет уровень логической 1. Завершающее поле EOF (end of frame) содержит 
семь единичных бит. За этим полем следует поле-заполнитель (INT) из трех единичных бит, после него 
может следовать очередной кадр. Формат расширенного информационного кадра сети can показан на рис. 4.1.4.2.</p>

<p align="center"><img src="image190.gif" tppabs="http://book.itep.ru/4/41/image190.gif"></p>
<p align="center">Рис. 4.1.4.2. Расширенный информационный кадр 2.0b CAN </p>

<p align="justify">	Однобитовое субполе SRR (substitute remote request) включено в поле 
арбитража (идентификатора кадра) и всегда содержит код 1, что гарантирует преимущество 
стандартного информационного кадра (2.0a) случае его соревнования с расширенным кадром (2.0b) 
(при равных 11 битах идентификатора). Субполе IDE (identifier extension) служит для идентификации 
расширенного формата и для этого типа кадра всегда имеет уровень логической 1. Вслед за IDE следует 18-битовое поле (биты имеют имена id-17, ..., id-0; первым передается бит id-28) 
расширения идентификатора кадра. Контроллеры 2.0b полностью совместимы с кадрами 2.0a и могут 
посылать и принимать пакеты обоих типов. Идентификаторы в 
пределах одной сети должны быть уникальными. Следует иметь в виду, что 18-битное поле расширения 
идентификатора можно при определенных условиях использовать и для передачи информации. 
Идентификатор не является адресом места назначения, а определяет назначение передаваемых данных 
(адресация по содержанию). По этой причине пакет может быть принят отдельным узлом, группой узлов, всеми узлами сети или не воспринят вообще. Предельное число различных идентификаторов для версии 2.0a составляет 2032, а для 2.0b превышает 500 миллионов.</p>

<p align="justify">Послав кадр-запрос другому узлу, отправитель может затребовать присылку определенной информации. Удаленный узел должен откликнуться информационным кадром с тем же идентификатором, что и запрос.</p>

<p align="justify">Если несколько узлов начнут передачу одновременно, право передать кадр будет предоставлено узлу с более высоким приоритетом, который задается идентификатором кадра. Механизм арбитража гарантирует, что ни информация, ни время не будут потеряны. Если одновременно начнется передача запроса и информационного кадра с равными идентификаторами, предпочтение будет 
дано информационному пакету. В процессе арбитража каждый передатчик сравнивает уровень передаваемого сигнала с реальным уровнем на шине. Если эти уровни идентичны, он может продолжить передачу, в противном случае передача прерывается и шина остается в распоряжении более приоритетного кадра.</p>

<p align="justify">Протокол can имеет развитую систему диагностики ошибок. В результате вероятность не выявленной ошибки составляет менее 4.7<font face="symbol">ґ</font> 
10<sup>-11</sup>. При выявлении ошибки кадр отбрасывается и его передача повторяется.</p>

<p align="justify">Число узлов, подключенных к каналу, протоколом не лимитируется. Практически такое ограничение налагается задержкой или предельной нагрузкой канала.</p>

<p align="justify">Любой модуль can может быть переведен в пассивный режим (“состояние сна”), при котором внутренняя активность прекращается, а драйверы отключаются от канала. Выход из этого режима возможен либо по внутренним причинам, либо вследствие сетевой активности. После “пробуждения” модуль ждет, пока стабилизируется его внутренний тактовый генератор, после чего производится синхронизация его работы с тактами канала (11 тактов). Благодаря синхронизации 
отдельные узлы не могут начать передачу асинхронно (со сдвигом на часть такта). Протокол предусматривает использование четырех типов кадров:</p>

<ul>
<li>Информационный.</li>
<li>Удаленный запрос (требование присылки информационного кадра с тем же идентификатором, что и запрос).</li>
<li>Сообщение об ошибке.</li>
<li>Уведомление о перегрузке канала (требует дополнительной задержки до и после передач информационных кадров и удаленных запросов).</li></ul>

<p align="justify">Информационные кадры и удаленные запросы могут использовать как стандартные, так и расширенные форматы кадров (2.0a и 2.0b). </p>

<b><p align="justify">Кадр удаленного запроса</b> может иметь стандартный и расширенный форматы. В обоих случаях он содержит 6 полей: SOF, поле арбитража, поле управления, CRC, поля ACK и EOF. Для этого типа кадров бит RTR=1, а поле данных отсутствует вне зависимости от того, какой код содержится в субполе длины.</p>

<b><p align="justify">Кадр сообщения об ошибке</b> имеет только два поля - суперпозиция флагов ошибки и разграничитель ошибки. Флаги ошибки бывают активными и пассивными. Активный флаг состоит из шести нулевых бит, а пассивный - из шести единиц. Суперпозиция флагов может содержать от 6 до 
12 бит. Разграничитель ошибки состоит из восьми единичных бит.</p>

<b><p align="justify">Кадр перегрузки</b> включает в себя два поля - перпозиция флагов перегрузки и разграничитель перегрузки (8 бит =1). В поле <i>флаг ерегрузки</i> записывается 6 бит, равных нулю (как и в поле <i>флаг активной ошибки</i>). Кадры ошибки или перегрузки не требуют межкадровых разделителей. Существует ряд условий перегрузки, каждое из которых вызывает посылку такого кадра:</p>

<ul>
<li>внутренние обстоятельства приемника, которые требуют задержки передачи следующего кадра данных или запроса.</li>
<li>Детектирование доминантного бита в начале поля <i>int</i>.</li>
<li>Обнаружение узлом доминантного восьмого бита в поле <i>разграничителя ошибки</i> или <i>разграничителя перегрузки</i>. </li></ul>

<p align="justify">Время пребывания канала в пассивном состоянии не нормировано. Появление доминантного бита на шине, пребывающей в пассивном состоянии, воспринимается как начало очередного 
кадра. Предусматривается возможность установления масок в узле на отдельные двоичные разряды идентификатора, что позволяет игнорировать их значения. Маскирование делает возможным мультикастинг-адресацию.</p>

<p align="justify">Поля <i>SOF, идентификатор, управляющее поле, данные</i> и <i>CRC</i> 
кодируются таким образом, что при появлении пяти идентичных бит подряд, в поток вставляется бит 
противоположного уровня. Так 0000000 преобразуется в 00000100, а 1111110 в 11111010. Это правило 
не распространяется на CRC-разделители, поля ACK и EOF, а также на кадры сообщения об ошибке или 
переполнении. Существует 5 разновидностей ошибок (таблица 3.3.4.1).</p>

<p align="center">Таблица 4.1.4.1 Разновидности ошибок.</p>

<center> <table border=10 cellspacing=2 cellpadding=5 width=800 bgcolor="ghostwhite">
<tr><td width="25%" valign="top" bgcolor="gainsboro"><b><p align="justify">Тип ошибки</b></td>
<td width="75%" valign="top" bgcolor="gainsboro"><b><p align="justify">Описание</b></td>
</tr>
<tr><td width="25%" valign="top"><p align="justify">bit error</td>
<td width="75%" valign="top"><p align="justify">Передающий узел обнаружил, что состояние шины не 
соответствует тому, что он туда передает</td>
</tr>
<tr><td width="25%" valign="top"><p align="justify">stuff error</td>
<td width="75%" valign="top"><p align="justify">Нарушено правило кодирования (вставка бита 
противоположного значения после 5 идентичных бит, см. абзац выше).</td>
</tr>
<tr><td width="25%" valign="top"><p align="justify">CRC error</td>
<td width="70%" valign="top"><p align="justify">Приемник обнаружил ошибку в контрольной сумме.</td>
</tr>
<tr><td width="30%" valign="top"><p align="justify">form error</td>
<td width="75%" valign="top"><p align="justify">Обнаружено нарушение формата кадра</td>
</tr>
<tr><td width="25%" valign="top">
<p align="justify">acknowledgment error</td>
<td width="75%" valign="top"><p align="justify">Выявлен неверный уровень первого бита поля ack.</td>
</tr>
</table></center> 

<p align="justify">Любой узел CAN должен регистрировать и по запросу сообщать число ошибок при передаче и приеме.</p>

<p align="justify">Номинальное время, выделенное для передачи одного бита, включает в себя четыре 
временные области: sync_seg, prop_seg, phase_seg1, phase_seg2 (рис.3.4.4.3).</p>

<p align="center"><img src="image191.gif" tppabs="http://book.itep.ru/4/41/image191.gif"></P>
<P ALIGN="CENTER">Рис. 4.1.4.3 Временные зоны периода передачи одного бита</P>

<P ALIGN="JUSTIFY">Первая временная область (SYNC_SEG) служит для синхронизации работы различных узлов сети. Область PROP_SEG предназначена для компенсации временных задержек в сети и равна сумме времени распространения сигнала по каналу и задержки во входных компараторах. PHASE_SEG1 и PHASE_SEG2 служат для компенсации фазовых ошибок и могут увеличиваться или уменьшаться после синхронизации. T<SUB>0</SUB> - минимальный квант времени, используемый для формирования временной шкалы в пределах периода передачи одного бита (длительность внутреннего такта может быть значительно короче). Момент стробирования определяет момент времени, когда проверяется состояние канала. Этот момент должен быть синхронным для всех узлов сети. Длительность этих временных областей может задаваться программно. Чем длиннее канал, тем меньшую скорость передачи информации он может обеспечить (см. табл. 3.3.4.2).</P>

<P ALIGN="CENTER">Таблица 4.1.4.2 Зависимость пропускной способности канала от его длины</P>

<CENTER><TABLE BORDER=10 CELLSPACING=2 CELLPADDING=5 WIDTH=600 bgcolor="ghostwhite">
<TR><TD WIDTH="38%" VALIGN="TOP" bgcolor="gainsboro"><P ALIGN="CENTER">Длина канала в метрах</TD>
<TD WIDTH="62%" VALIGN="TOP" bgcolor="gainsboro"><P ALIGN="CENTER">Пропускная способность сети в Кбит/с</TD>
</TR>
<TR><TD WIDTH="38%" VALIGN="TOP"><P ALIGN="CENTER">100</TD>
<TD WIDTH="62%" VALIGN="TOP"><P ALIGN="CENTER">500</TD>
</TR>
<TR><TD WIDTH="38%" VALIGN="TOP"><P ALIGN="CENTER">200</TD>
<TD WIDTH="62%" VALIGN="TOP"><P ALIGN="CENTER">250</TD>
</TR>
<TR><TD WIDTH="38%" VALIGN="TOP"><P ALIGN="CENTER">500</TD>
<TD WIDTH="62%" VALIGN="TOP"><P ALIGN="CENTER">125</TD>
</TR>
<TR><TD WIDTH="38%" VALIGN="TOP"><P ALIGN="CENTER">6000</TD>
<TD WIDTH="62%" VALIGN="TOP"><P ALIGN="CENTER">10</TD>
</TR>
</TABLE>
</CENTER>

<P ALIGN="JUSTIFY">В сетях CAN используются 9-, 6- и 5-контактные разъемы. Тип разъема, или какие либо его характеристики стандартом не регламентируются. Разъем определяется протоколом HLP (High Layer Protocol).</P>






</TD></TR>

<TR bgcolor="steelblue"><TD VALIGN="TOP" bgcolor="steelblue" LINK="#0000FF"><P ALIGN="center">

<FONT color="white"><B> Previous: </B></FONT>
<A HREF="802_413.htm" tppabs="http://book.itep.ru/4/41/802_413.htm"><FONT COLOR="lightblue">4.1.3 IEEE 802.4 (Маркерная шина)</FONT></A>



<FONT color="white"><B> &nbsp; &nbsp;UP:</B></FONT>
<A HREF="eth_411.htm" tppabs="http://book.itep.ru/4/41/eth_411.htm"><FONT COLOR="lightblue">4.1.1 Ethernet (IEEE 802.3)</FONT></A>


<BR>

<FONT color="white"><B>  Down:</B></FONT>
<A HREF="apply_42.htm" tppabs="http://book.itep.ru/4/42/apply_42.htm"><FONT COLOR="lightblue">4.2 Наложенные сети</FONT></A>



<FONT color="white"><B> &nbsp; &nbsp;Next:</B></FONT>
<A HREF="arc_415.htm" tppabs="http://book.itep.ru/4/41/arc_415.htm"><FONT COLOR="lightblue">4.1.5 Локальные сети ArcNet</FONT></A>

</TD>
  </TR>
</table>
</BODY>
</HTML>